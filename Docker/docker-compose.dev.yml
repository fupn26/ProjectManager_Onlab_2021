version: "3.7"

services:
  api_gateway:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--tracing.jaeger=true"
      - "--tracing.servicename=traefik"
      - "--tracing.jaeger.samplingParam=1.0"
      - "--tracing.jaeger.samplingType=const"
      - "--tracing.jaeger.propagation=jaeger"
      - "--tracing.jaeger.traceContextHeaderName=uber-trace-id"
      #- "--tracing.jaeger.gen128Bit=true"
      - "--tracing.jaeger.localAgentHostPort=project_jaeger:6831"
      - "--tracing.jaeger.samplingServerURL=http://project_jaeger:5778/sampling"
    ports:
      - "5000:80"
      - "5001:8080"
      - "81:81"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - project-network

  authenticator:
    image: quay.io/keycloak/keycloak:18.0.0
    command:
      #- "start-dev"
      - "start"
      - "--auto-build"
      - "--hostname-strict-https=false"
    ports:
      - "5010:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KC_DB=mysql
      - KC_DB_URL_HOST=project_mysql
      - KC_DB_URL_PORT=3306
      - KC_DB_URL_DATABASE=${MYSQL_DB}
      - KC_DB_USERNAME=${MYSQL_USER}
      - KC_DB_PASSWORD=${MYSQL_PASSWORD}
      - KC_HTTP_RELATIVE_PATH=keycloak
      - KC_PROXY=edge
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
    depends_on:
      - project_mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authenticator.rule=PathPrefix(`/keycloak/admin`, `/keycloak/js`, `/keycloak/realms`, `/keycloak/resources`, `/keycloak/robots.txt`)"
    networks:
      - project-network

  project_service:
    image: "${REGISTRY_URL:-microproject}/projects:${IMAGE_TAG:-latest}"
    build:
      context: ../src/ProjectService
      dockerfile: ProjectAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - ProjectDbSettings__ConnectionString=mongodb://project_mongo:27017
      - RabbitMqSettings__Host=${RABBIT_HOST}
      - RabbitMqSettings__Port=${RABBIT_PORT}
      - RabbitMqSettings__Username=${RABBIT_USER}
      - RabbitMqSettings__Password=${RABBIT_PASS}
      - UserServiceSettings__BaseUrl=http://users:8080
      - JaegerSettings__Host=project_jaeger
      - JaegerSettings__Port=6831
    networks:
      - project-network
    ports:
      - "5002:80" # for accessing Swagger
    depends_on:
      - project_mongo
      - project_rabbit
      - users
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project.rule=PathPrefix(`/api/v1/project`)"
      - "traefik.http.middlewares.project-auth.forwardauth.address=${FORWARD_AUTH_URL}"
      - "traefik.http.routers.project.middlewares=project-auth@docker"

  meeting_service:
    image: "${REGISTRY_URL:-microproject}/meetings:${IMAGE_TAG:-latest}"
    build:
      context: ../src/ProjectService
      dockerfile: MeetingAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - MeetingDbSettings__ConnectionString=mongodb://project_mongo:27017
    networks:
      - project-network
    ports:
      - "5003:80" # for accessing Swagger
    depends_on:
      - project_mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meeting.rule=PathPrefix(`/api/v1/meeting`)"
      - "traefik.http.middlewares.meeting-auth.forwardauth.address=${FORWARD_AUTH_URL}"
      - "traefik.http.routers.meeting.middlewares=meeting-auth@docker"

  todo_service:
    image: "${REGISTRY_URL:-microproject}/todos:${IMAGE_TAG:-latest}"
    build:
      context: ../src/ProjectService
      dockerfile: ToDoAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - ToDoDbSettings__ConnectionString=mongodb://project_mongo:27017
      - ToDoCacheSettings__ConnectionString=project_redis:6379
    networks:
      - project-network
    ports:
      - "5004:80" # for accessing Swagger
    depends_on:
      - project_mongo
      - project_redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo.rule=PathPrefix(`/api/v1/todo`)"
      - "traefik.http.middlewares.todo-auth.forwardauth.address=${FORWARD_AUTH_URL}"
      - "traefik.http.routers.todo.middlewares=todo-auth@docker"

  comment_service:
    image: "${REGISTRY_URL:-microproject}/comments:${IMAGE_TAG:-latest}"
    build:
      context: ../src/ProjectService
      dockerfile: CommentAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - CommentDbSettings__ConnectionString=mongodb://project_mongo:27017
    networks:
      - project-network
    ports:
      - "5005:80" # for accessing Swagger
    depends_on:
      - project_mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.comment.rule=PathPrefix(`/api/v1/comment`, `/commentHub`)"
      - "traefik.http.middlewares.comment-auth.forwardauth.address=${FORWARD_AUTH_URL}"
      - "traefik.http.routers.comment.middlewares=comment-auth@docker"

  mail_service:
    image: "${REGISTRY_URL:-microproject}/mails:${IMAGE_TAG:-latest}"
    build:
      context: ../src/MailService
    networks:
      - project-network
    depends_on:
      - project_rabbit
    environment:
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASSWORD=${RABBIT_PASS}
      - USER_SERVICE_HOST=users
      - USER_SERVICE_PORT=8080
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_SENDER_NAME=MIcroProject
      - SENDGRID_SENDER_EMAIL=hifyalorzu@vusra.com

  users:
    image: "${REGISTRY_URL:-microproject}/users:${IMAGE_TAG:-latest}"
    build: 
      context: ../src/UserService
      dockerfile: ./Dockerfile
    environment:
      - DB_HOST=project_mysql
      - DB_PORT=3306
      - DB=${MYSQL_DB}
      - DB_USER=${MYSQL_USER}
      - DB_PASS=${MYSQL_PASSWORD}
      - ADMIN_PASS=password
      - JWT_SECRET=6f93a7420057e6e71ced 
      - spring_profiles_active=prod
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASS=${RABBIT_PASS}
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://project_jaeger:14250
      - OTEL_EXPORTER_JAEGER_TIMEOUT=10000
      - OTEL_SERVICE_NAME=users
      - OTEL_METRICS_EXPORTER=none
      - KEYCLOAK_BASE_URL=http://authenticator:8080/keycloak
      - KEYCLOAK_REALM=project_manager_realm
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
    networks:
      - project-network
    ports:
      - "5006:8080" # for accessing Swagger
    depends_on:
      - project_mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/v1/user/auth`)"
      - "traefik.http.routers.register.rule=PathPrefix(`/api/v1/user/register`)"
      - "traefik.http.routers.signin.rule=PathPrefix(`/api/v1/user/signin`)"
      - "traefik.http.routers.user.rule=PathPrefix(`/api/v1/user`)"
      - "traefik.http.middlewares.user-auth.forwardauth.address=${FORWARD_AUTH_URL}"
      - "traefik.http.routers.user.middlewares=user-auth@docker"

  web:
    image: "${REGISTRY_URL:-microproject}/web:${IMAGE_TAG:-latest}"
    build:
      context: ../src/Frontend
      dockerfile: ./Dockerfile
      args:
        - REACT_APP_BASE_URL=${KEYCLOAK_BASE_URL:-http://localhost:5000/keycloak}
    networks:
      - project-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"

  project_mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - project-network

  project_redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - project-network

  project_rabbit:
    image: rabbitmq:3.8-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - project-network

  project_mysql: 
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - project-network

  project_jaeger:
    image: jaegertracing/all-in-one:1.33
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://project_elasticsearch:9200
    depends_on:
      - project_elasticsearch
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "12345:12345"
    networks:
      - project-network


  project_elasticsearch:
    image: elasticsearch:7.17.3
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - project-network
      
networks:
  project-network: