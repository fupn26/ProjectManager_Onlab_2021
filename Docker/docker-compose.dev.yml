version: "3.7"

services:
  api_gateway:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--api.dashboard=true"
    ports:
      - "5000:80"
      - "5001:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - project-network

  project_service:
    build:
      context: ../ProjectService
      dockerfile: ProjectAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - ProjectDbSettings__ConnectionString=mongodb://project_mongo:27017
      - RabbitMqSettings__Host=${RABBIT_HOST}
      - RabbitMqSettings__Port=${RABBIT_PORT}
      - RabbitMqSettings__Username=${RABBIT_USER}
      - RabbitMqSettings__Password=${RABBIT_PASS}
      - UserServiceSettings__BaseUrl=http://users:8080
    networks:
      - project-network
    ports:
      - "5002:80" # for accessing Swagger
    depends_on:
      - project_mongo
      - project_rabbit
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project.rule=PathPrefix(`/api/v1/project`)"
      - "traefik.http.middlewares.project-auth.forwardauth.address=http://users:8080/api/v1/user/auth"
      - "traefik.http.routers.project.middlewares=project-auth@docker"

  meeting_service:
    build:
      context: ../ProjectService
      dockerfile: MeetingAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - MeetingDbSettings__ConnectionString=mongodb://project_mongo:27017
    networks:
      - project-network
    ports:
      - "5003:80" # for accessing Swagger
    depends_on:
      - project_mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meeting.rule=PathPrefix(`/api/v1/meeting`)"
      - "traefik.http.middlewares.meeting-auth.forwardauth.address=http://users:8080/api/v1/user/auth"
      - "traefik.http.routers.meeting.middlewares=meeting-auth@docker"

  todo_service:
    build:
      context: ../ProjectService
      dockerfile: ToDoAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - ToDoDbSettings__ConnectionString=mongodb://project_mongo:27017
    networks:
      - project-network
    ports:
      - "5004:80" # for accessing Swagger
    depends_on:
      - project_mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo.rule=PathPrefix(`/api/v1/todo`)"
      - "traefik.http.middlewares.todo-auth.forwardauth.address=http://users:8080/api/v1/user/auth"
      - "traefik.http.routers.todo.middlewares=todo-auth@docker"

  comment_service:
    build:
      context: ../ProjectService
      dockerfile: CommentAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
      - CommentDbSettings__ConnectionString=mongodb://project_mongo:27017
    networks:
      - project-network
    ports:
      - "5005:80" # for accessing Swagger
    depends_on:
      - project_mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.comment.rule=PathPrefix(`/api/v1/comment`)"
      - "traefik.http.middlewares.comment-auth.forwardauth.address=http://users:8080/api/v1/user/auth"
      - "traefik.http.routers.comment.middlewares=comment-auth@docker"

  mail_service:
    build:
      context: ../MailService
    networks:
      - project-network
    depends_on:
      - project_rabbit
    environment:
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASSWORD=${RABBIT_PASS}
      - USER_SERVICE_HOST=users
      - USER_SERVICE_PORT=8080
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_SENDER_NAME=MIcroProject
      - SENDGRID_SENDER_EMAIL=hifyalorzu@vusra.com

  users:
    build: 
      context: ../UserService
      dockerfile: ./Dockerfile
    environment:
      - DB_HOST=project_mysql
      - DB_PORT=3306
      - DB=${MYSQL_DB}
      - DB_USER=${MYSQL_USER}
      - DB_PASS=${MYSQL_PASSWORD}
      - ADMIN_PASS=password
      - JWT_SECRET=6f93a7420057e6e71ced 
      - spring_profiles_active=prod
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASS=${RABBIT_PASS}
    networks:
      - project-network
    ports:
      - "5006:8080" # for accessing Swagger
    depends_on:
      - project_mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/v1/user/auth`)"
      - "traefik.http.routers.register.rule=PathPrefix(`/api/v1/user/register`)"
      - "traefik.http.routers.signin.rule=PathPrefix(`/api/v1/user/signin`)"
      - "traefik.http.routers.user.rule=PathPrefix(`/api/v1/user`)"
      - "traefik.http.middlewares.user-auth.forwardauth.address=http://users:8080/api/v1/user/auth"
      - "traefik.http.routers.user.middlewares=user-auth@docker"

  web:
    build:
      context: ../Frontend
      dockerfile: ./Dockerfile
    networks:
      - project-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"

  project_mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - project-network

  project_rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - project-network

  project_mysql: 
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - project-network
      
networks:
  project-network: